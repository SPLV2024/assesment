# -*- coding: utf-8 -*-
"""LVADSUSR _Saswata _Pradhan _ linear reg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LPwOPulIF00VgQ9ZmxzGErUQHFHkIqbV
"""

import pandas as pd
df = pd.read_csv('expenses.csv')
df.head()

df.info()


df.isnull().sum()

df['charges'] = df['charges'].astype('float')
df['age'] = df['age'].astype('int64')

df.describe()

df['bmi'] = df['bmi'].fillna(df['bmi'].median())




import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(data=df[['age','bmi']])
plt.show()

# For age
Q1 = df['age'].quantile(0.25)
Q3 = df['age'].quantile(0.75)
IQR = Q3 - Q1

lower_limit = Q1 - 1.5 * IQR
upper_limit = Q3 + 1.5 * IQR

df['age'] = df['age'].clip(lower=lower_limit, upper=upper_limit)

# For bmi
Q1 = df['bmi'].quantile(0.25)
Q3 = df['bmi'].quantile(0.75)
IQR = Q3 - Q1

lower_limit = Q1 - 1.5 * IQR
upper_limit = Q3 + 1.5 * IQR

df['bmi'] = df['bmi'].clip(lower=lower_limit, upper=upper_limit)

df.head()

df = pd.get_dummies(df, columns=['sex', 'smoker', 'region'], dtype=int)
df.head()

df = df.drop_duplicates()



target_column = 'charges'
training_columns = list(df.columns)
training_columns.remove(target_column)

X = df[training_columns]
y= df[target_column]

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
X_scaled = scaler.fit_transform(X)

# Convert the scaled data back to a DataFrame
X = pd.DataFrame(X_scaled, columns=training_columns)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=101)
from sklearn.linear_model import LinearRegression
#Linear regression model
Linear_model= LinearRegression()
Linear_model.fit(X_train,y_train)

LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None)

predictions1=Linear_model.predict(X_test)
from sklearn.metrics import mean_squared_error
print(mean_squared_error(y_test,predictions1)**(0.5))

from sklearn.metrics import mean_squared_error

rmse = mean_squared_error(y_test, predictions1)**(0.5)
print("RMSE:", rmse)

#R2 score from the regression model
from sklearn.metrics import r2_score
r2_score(y_test,predictions1)

#Ridge regression
from sklearn.linear_model import Ridge
ridge_model=Ridge()
ridge_model.fit(X_train,y_train)
predictions2=ridge_model.predict(X_test)
print(mean_squared_error(y_test,predictions2)**(0.5))

#Lasso regression
from sklearn.linear_model import Lasso
lasso_model=Lasso(alpha=0.00000001)
lasso_model.fit(X_train,y_train)
r2_score(y_test,predictions2)

# Feature Importance
coefs = pd.Series(lasso_model.coef_, index=X_train.columns)
print(coefs.sort_values(ascending=False))